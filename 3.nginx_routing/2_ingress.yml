apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment  # 올바른 이름으로 수정
  namespace: jiho
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-nginx  # 단순 키-값 쌍으로 수정
  template:
    metadata:
      labels:
        app: my-nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: jiho
spec:
# Ingress를 적용하기 위해 ClusterIp로 변경
  type: ClusterIP
  selector:
    app: my-nginx
  ports:
  - name: http
    port: 80
    targetPort: 80
---
# Ingress-controller 설치는 별도 필요
# Ingress-controller도 nginx 기반으로 구성돼있음
# Ingress-controller 를 설치시에 alb 생성되고, Ingress 자원과 함께 서비스 라우팅 수행
# Ingress-controller 1개에서 여러 개의 Ingress로 라우팅

# Ingress 설치 명령어
# kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/aws/deploy.yaml

# aws eks update-kubeconfig --region ap-northeast-2 --name <cluster 이름>

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-nginx-ingress
  namespace: jiho
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1 #첫번째 prefix 제거 후 endpoint 전달
spec:
  ingressClassName: nginx
  rules:
  - host: server.jiho-test.store
    http:
      paths:
      - pathType: ImplementationSpecific  # 변경된 부분
        path: "/product-service/(.*)"
        backend:
          service:
            name: nginx-service
            port: 
              number: 80
      - pathType: ImplementationSpecific  # 변경된 부분
        path: "/order-service/(.*)"
        backend:
          service:
            name: nginx-service
            port: 
              number: 80
      - pathType: ImplementationSpecific  # 변경된 부분
        path: "/member-service/(.*)"
        backend:
          service:
            name: nginx-service
            port: 
              number: 80